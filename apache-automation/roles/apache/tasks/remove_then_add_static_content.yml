
# prepare static content for this app. assume .zip is already on the server, likely by checkout process from Harvest.
- name: unzip static content in staging location
  unarchive: 
    src: "{{ dest_app_static_content_zip_dir }}/{{ app_static_content_zip_file }}"
    #hard code example: dest: /apache/staging/ARISInter/maybe_also_add_date # result will be like /apache/staging/ARISInter/arisW/content/...
    dest: "{{ dest_app_static_content_unzipped_staging }}"
    remote_src: yes
    
- name: remove existing static content  
  # dest_app_static_content_unzipped_final is like: /var/www/html/edtW 
  file:
    path: "{{ dest_app_static_content_unzipped_final }}"
    state: absent
      
- name: make sure Documentroot "{{ tso_apache_root }}/{{ env_dtup }}/{{ appname_i }}/var/www/html" exists
  file:
    path: "{{ tso_apache_root }}/{{ env_dtup }}/{{ appname_i }}/var/www/html"
    state: directory


- name: copy dest_app_static_content_unzipped_staging to final destination (or just use a link) to be decided
#  command: "cp -pr /apache/staging/ARISInter//arisW/content/ /var/www/html/edtW/"
#  command: "cp -pr /web/DEV/staging/AUDITIntra/auditWeb_StaticContent/audit/content /web/DEV/AUDITIntra/var/www/html/audit
  command:  cp -pr "{{ dest_app_static_content_unzipped_staging }}{{ path_to_actual_content }}"  "{{ dest_app_static_content_unzipped_final }}"

  
